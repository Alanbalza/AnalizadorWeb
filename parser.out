Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    DIVIDE
    MINUS
    NUMBER
    PLUS
    TIMES

Grammar

Rule 0     S' -> program
Rule 1     program -> OBJECT ID LBRACE main_def RBRACE
Rule 2     main_def -> DEF ID LPAREN args RPAREN COLON UNIT EQUALS LBRACE stmt_list RBRACE
Rule 3     args -> ID COLON ARRAY LBRACKET STRING RBRACKET
Rule 4     stmt_list -> stmt_list stmt
Rule 5     stmt_list -> stmt
Rule 6     stmt -> PRINTLN LPAREN STRING_LITERAL RPAREN SEMI

Terminals, with rules where they appear

ARRAY                : 3
COLON                : 2 3
COMMA                : 
DEF                  : 2
DIVIDE               : 
EQUALS               : 2
ID                   : 1 2 3
LBRACE               : 1 2
LBRACKET             : 3
LPAREN               : 2 6
MINUS                : 
NUMBER               : 
OBJECT               : 1
PLUS                 : 
PRINTLN              : 6
RBRACE               : 1 2
RBRACKET             : 3
RPAREN               : 2 6
SEMI                 : 6
STRING               : 3
STRING_LITERAL       : 6
TIMES                : 
UNIT                 : 2
error                : 

Nonterminals, with rules where they appear

args                 : 2
main_def             : 1
program              : 0
stmt                 : 4 5
stmt_list            : 2 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . OBJECT ID LBRACE main_def RBRACE

    OBJECT          shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> OBJECT . ID LBRACE main_def RBRACE

    ID              shift and go to state 3


state 3

    (1) program -> OBJECT ID . LBRACE main_def RBRACE

    LBRACE          shift and go to state 4


state 4

    (1) program -> OBJECT ID LBRACE . main_def RBRACE
    (2) main_def -> . DEF ID LPAREN args RPAREN COLON UNIT EQUALS LBRACE stmt_list RBRACE

    DEF             shift and go to state 6

    main_def                       shift and go to state 5

state 5

    (1) program -> OBJECT ID LBRACE main_def . RBRACE

    RBRACE          shift and go to state 7


state 6

    (2) main_def -> DEF . ID LPAREN args RPAREN COLON UNIT EQUALS LBRACE stmt_list RBRACE

    ID              shift and go to state 8


state 7

    (1) program -> OBJECT ID LBRACE main_def RBRACE .

    $end            reduce using rule 1 (program -> OBJECT ID LBRACE main_def RBRACE .)


state 8

    (2) main_def -> DEF ID . LPAREN args RPAREN COLON UNIT EQUALS LBRACE stmt_list RBRACE

    LPAREN          shift and go to state 9


state 9

    (2) main_def -> DEF ID LPAREN . args RPAREN COLON UNIT EQUALS LBRACE stmt_list RBRACE
    (3) args -> . ID COLON ARRAY LBRACKET STRING RBRACKET

    ID              shift and go to state 10

    args                           shift and go to state 11

state 10

    (3) args -> ID . COLON ARRAY LBRACKET STRING RBRACKET

    COLON           shift and go to state 12


state 11

    (2) main_def -> DEF ID LPAREN args . RPAREN COLON UNIT EQUALS LBRACE stmt_list RBRACE

    RPAREN          shift and go to state 13


state 12

    (3) args -> ID COLON . ARRAY LBRACKET STRING RBRACKET

    ARRAY           shift and go to state 14


state 13

    (2) main_def -> DEF ID LPAREN args RPAREN . COLON UNIT EQUALS LBRACE stmt_list RBRACE

    COLON           shift and go to state 15


state 14

    (3) args -> ID COLON ARRAY . LBRACKET STRING RBRACKET

    LBRACKET        shift and go to state 16


state 15

    (2) main_def -> DEF ID LPAREN args RPAREN COLON . UNIT EQUALS LBRACE stmt_list RBRACE

    UNIT            shift and go to state 17


state 16

    (3) args -> ID COLON ARRAY LBRACKET . STRING RBRACKET

    STRING          shift and go to state 18


state 17

    (2) main_def -> DEF ID LPAREN args RPAREN COLON UNIT . EQUALS LBRACE stmt_list RBRACE

    EQUALS          shift and go to state 19


state 18

    (3) args -> ID COLON ARRAY LBRACKET STRING . RBRACKET

    RBRACKET        shift and go to state 20


state 19

    (2) main_def -> DEF ID LPAREN args RPAREN COLON UNIT EQUALS . LBRACE stmt_list RBRACE

    LBRACE          shift and go to state 21


state 20

    (3) args -> ID COLON ARRAY LBRACKET STRING RBRACKET .

    RPAREN          reduce using rule 3 (args -> ID COLON ARRAY LBRACKET STRING RBRACKET .)


state 21

    (2) main_def -> DEF ID LPAREN args RPAREN COLON UNIT EQUALS LBRACE . stmt_list RBRACE
    (4) stmt_list -> . stmt_list stmt
    (5) stmt_list -> . stmt
    (6) stmt -> . PRINTLN LPAREN STRING_LITERAL RPAREN SEMI

    PRINTLN         shift and go to state 24

    stmt_list                      shift and go to state 22
    stmt                           shift and go to state 23

state 22

    (2) main_def -> DEF ID LPAREN args RPAREN COLON UNIT EQUALS LBRACE stmt_list . RBRACE
    (4) stmt_list -> stmt_list . stmt
    (6) stmt -> . PRINTLN LPAREN STRING_LITERAL RPAREN SEMI

    RBRACE          shift and go to state 25
    PRINTLN         shift and go to state 24

    stmt                           shift and go to state 26

state 23

    (5) stmt_list -> stmt .

    RBRACE          reduce using rule 5 (stmt_list -> stmt .)
    PRINTLN         reduce using rule 5 (stmt_list -> stmt .)


state 24

    (6) stmt -> PRINTLN . LPAREN STRING_LITERAL RPAREN SEMI

    LPAREN          shift and go to state 27


state 25

    (2) main_def -> DEF ID LPAREN args RPAREN COLON UNIT EQUALS LBRACE stmt_list RBRACE .

    RBRACE          reduce using rule 2 (main_def -> DEF ID LPAREN args RPAREN COLON UNIT EQUALS LBRACE stmt_list RBRACE .)


state 26

    (4) stmt_list -> stmt_list stmt .

    RBRACE          reduce using rule 4 (stmt_list -> stmt_list stmt .)
    PRINTLN         reduce using rule 4 (stmt_list -> stmt_list stmt .)


state 27

    (6) stmt -> PRINTLN LPAREN . STRING_LITERAL RPAREN SEMI

    STRING_LITERAL  shift and go to state 28


state 28

    (6) stmt -> PRINTLN LPAREN STRING_LITERAL . RPAREN SEMI

    RPAREN          shift and go to state 29


state 29

    (6) stmt -> PRINTLN LPAREN STRING_LITERAL RPAREN . SEMI

    SEMI            shift and go to state 30


state 30

    (6) stmt -> PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .

    RBRACE          reduce using rule 6 (stmt -> PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)
    PRINTLN         reduce using rule 6 (stmt -> PRINTLN LPAREN STRING_LITERAL RPAREN SEMI .)

